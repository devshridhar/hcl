
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  app:
    build: .
    container_name: express-graphql-kafka
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - kafka
      - kong
    environment:
      MONGO_URI: "mongodb://mongodb:27017/userDB"
      KAFKA_BROKER: "kafka:9092"
      JWT_SECRET: "supersecret"
    volumes:
      - .:/app
      - /app/node_modules

  kong-database:
    image: postgres:11
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    restart: always
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong:
    image: kong/kong-gateway:latest
    container_name: kong
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_PLUGINS: bundled,cors
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    restart: always
    command: ["/bin/sh", "-c", "kong migrations bootstrap && kong start"]

volumes:
  mongodb_data:
    driver: local
  kong_data:
    driver: local
