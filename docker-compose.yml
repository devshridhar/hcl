version: '3.8'

services:
  ## MongoDB for user service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  ## Apache Zookeeper for Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  ## Kafka for event streaming
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  ## Your Node.js Application (Express + GraphQL + Kafka)
  app:
    build: .
    container_name: express-graphql-kafka
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - kafka
      - kong
    environment:
      MONGO_URI: "mongodb://mongodb:27017/userDB"
      KAFKA_BROKER: "kafka:9092"
      JWT_SECRET: "supersecret"
    volumes:
      - .:/app
      - /app/node_modules

  ## PostgreSQL for Kong Gateway (Upgraded to 13)
  kong-database:
    image: postgres:13
    container_name: kong-database
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_db_data:/var/lib/postgresql/data

  ## Kong API Gateway with auto migrations
  kong-migrations:
    image: kong/kong-gateway:latest
    container_name: kong-migrations
    restart: on-failure
    depends_on:
      - kong-database
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong

  kong:
    image: kong/kong-gateway:latest
    container_name: kong
    restart: always
    depends_on:
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_CORS_ORIGIN: '*'
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"

  ## Konga Admin Panel with Database Migration
  konga-prepare:
    image: pantsel/konga
    container_name: konga-prepare
    depends_on:
      - kong
    command: sh -c "sleep 5 && konga --migrate"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: kong
      NODE_ENV: production

  ## Konga Admin Dashboard
  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    depends_on:
      - konga-prepare
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: kong
      NODE_ENV: production
    ports:
      - "1337:1337"

volumes:
  mongodb_data:
    driver: local
  kong_db_data:
    driver: local
